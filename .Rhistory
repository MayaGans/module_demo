shiny::runApp('share_data')
# Module server function
csvFile <- function(input, output, session, stringsAsFactors) {
# The selected file, if any
userFile <- reactive({
# If no file is selected, don't do anything
validate(need(input$file, message = FALSE))
input$file
})
# The user's data, parsed into a data frame
dataframe <- reactive({
read.csv(userFile()$datapath,
header = input$heading,
quote = input$quote,
stringsAsFactors = stringsAsFactors)
})
# We can run observers in here if we want to
observe({
msg <- sprintf("File %s was uploaded", userFile()$name)
cat(msg, "\n")
})
# Return the reactive that yields the data frame
return(dataframe)
}
shinyApp(ui, server)
shinyApp(ui, server)
# The first argument is the id -- the namespace for the module
csvFileInput <- function(id, label = "CSV file") {
# Create a namespace function using the provided id
#ALL UI FUNCTION BODIES MUST BEGIN WITH THIS
ns <- NS(id)
# Rather than fluidPage use a taglist
# If you're just returning a div you can skip the taglist
tagList(
# ns file
# ns heading
# ns quote
# only needed to be unique WITHIN THIS FUNCTION
fileInput(ns("file"), label),
checkboxInput(ns("heading"), "Has heading"),
selectInput(ns("quote"), "Quote", c(
"None" = "",
"Double quote" = "\"",
"Single quote" = "'"
))
)
}
runApp('share_data')
runApp()
runApp()
runApp()
data.frame(not_unique = c("a", "a", "b", "b", "c", "c"),
age = c(45,45,60,60,20,20),
group = c("1", "1", "2", "2", "3", "3"))
test <- data.frame(not_unique = c("a", "a", "b", "b", "c", "c"),
age = c(45,45,60,60,20,20),
group = c("1", "1", "2", "2", "3", "3"))
test %>% distinct()
library(tidyverse)
test %>% distinct(not_unique, age, group)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('select_color_top')
runApp('select_color_top')
library(reticulate)
library(reticulate)
library(reticulate)
use_python("/usr/local/bin/python")
library(reticulate)
use_python("/usr/local/bin/python")
py_install("seaborn")
library(reticulate)
use_python("/usr/local/bin/python")
# py_install("seaborn")
